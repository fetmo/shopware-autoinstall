<?php

namespace Shopware\Proxies\__CG__\Shopware\Models\Category;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Category extends \Shopware\Models\Category\Category implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'customerGroups', 'attribute', 'emotions', 'media', 'sortingIds', 'hideSortings', 'facetIds', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'id', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'parentId', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'streamId', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'stream', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'parent', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'name', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'position', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'metaTitle', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'metaKeywords', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'metaDescription', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'cmsHeadline', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'cmsText', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'active', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'template', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'productBoxLayout', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'blog', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'path', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'external', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'externalTarget', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'hideFilter', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'hideTop', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'children', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'articles', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'allArticles', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'changed', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'added', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'mediaId'];
        }

        return ['__isInitialized__', 'customerGroups', 'attribute', 'emotions', 'media', 'sortingIds', 'hideSortings', 'facetIds', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'id', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'parentId', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'streamId', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'stream', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'parent', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'name', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'position', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'metaTitle', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'metaKeywords', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'metaDescription', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'cmsHeadline', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'cmsText', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'active', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'template', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'productBoxLayout', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'blog', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'path', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'external', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'externalTarget', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'hideFilter', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'hideTop', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'children', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'articles', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'allArticles', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'changed', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'added', '' . "\0" . 'Shopware\\Models\\Category\\Category' . "\0" . 'mediaId'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Category $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setPrimaryIdentifier($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimaryIdentifier', [$id]);

        return parent::setPrimaryIdentifier($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentId', []);

        return parent::getParentId();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\Shopware\Models\Category\Category $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel($level = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', [$level]);

        return parent::getLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function setChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildren', [$children]);

        return parent::setChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', []);

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function isLeaf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLeaf', []);

        return parent::isLeaf();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setChanged($changed = 'now')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChanged', [$changed]);

        return parent::setChanged($changed);
    }

    /**
     * {@inheritDoc}
     */
    public function getChanged()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChanged', []);

        return parent::getChanged();
    }

    /**
     * {@inheritDoc}
     */
    public function getAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdded', []);

        return parent::getAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaKeywords($metaKeywords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaKeywords', [$metaKeywords]);

        return parent::setMetaKeywords($metaKeywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaKeywords', []);

        return parent::getMetaKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescription($metaDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescription', [$metaDescription]);

        return parent::setMetaDescription($metaDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', []);

        return parent::getMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setCmsHeadline($cmsHeadline)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCmsHeadline', [$cmsHeadline]);

        return parent::setCmsHeadline($cmsHeadline);
    }

    /**
     * {@inheritDoc}
     */
    public function getCmsHeadline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCmsHeadline', []);

        return parent::getCmsHeadline();
    }

    /**
     * {@inheritDoc}
     */
    public function setCmsText($cmsText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCmsText', [$cmsText]);

        return parent::setCmsText($cmsText);
    }

    /**
     * {@inheritDoc}
     */
    public function getCmsText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCmsText', []);

        return parent::getCmsText();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate($template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', [$template]);

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', []);

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function getBlog()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlog', []);

        return parent::getBlog();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlog($blog)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlog', [$blog]);

        return parent::setBlog($blog);
    }

    /**
     * {@inheritDoc}
     */
    public function setExternal($external)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternal', [$external]);

        return parent::setExternal($external);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternal', []);

        return parent::getExternal();
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalTarget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalTarget', []);

        return parent::getExternalTarget();
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalTarget($externalTarget)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalTarget', [$externalTarget]);

        return parent::setExternalTarget($externalTarget);
    }

    /**
     * {@inheritDoc}
     */
    public function setHideFilter($hideFilter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHideFilter', [$hideFilter]);

        return parent::setHideFilter($hideFilter);
    }

    /**
     * {@inheritDoc}
     */
    public function getHideFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHideFilter', []);

        return parent::getHideFilter();
    }

    /**
     * {@inheritDoc}
     */
    public function setHideTop($hideTop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHideTop', [$hideTop]);

        return parent::setHideTop($hideTop);
    }

    /**
     * {@inheritDoc}
     */
    public function getHideTop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHideTop', []);

        return parent::getHideTop();
    }

    /**
     * {@inheritDoc}
     */
    public function getArticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticles', []);

        return parent::getArticles();
    }

    /**
     * {@inheritDoc}
     */
    public function getAllArticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllArticles', []);

        return parent::getAllArticles();
    }

    /**
     * {@inheritDoc}
     */
    public function setArticles($articles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArticles', [$articles]);

        return parent::setArticles($articles);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttribute', []);

        return parent::getAttribute();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttribute($attribute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttribute', [$attribute]);

        return parent::setAttribute($attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerGroups', []);

        return parent::getCustomerGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomerGroups($customerGroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerGroups', [$customerGroups]);

        return parent::setCustomerGroups($customerGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedia', []);

        return parent::getMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedia($media)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedia', [$media]);

        return parent::setMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmotions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmotions', []);

        return parent::getEmotions();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmotions($emotions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmotions', [$emotions]);

        return parent::setEmotions($emotions);
    }

    /**
     * {@inheritDoc}
     */
    public function internalSetPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'internalSetPath', [$path]);

        return parent::internalSetPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', []);

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function isChildOf(\Shopware\Models\Category\Category $parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isChildOf', [$parent]);

        return parent::isChildOf($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductBoxLayout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductBoxLayout', []);

        return parent::getProductBoxLayout();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductBoxLayout($productBoxLayout)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductBoxLayout', [$productBoxLayout]);

        return parent::setProductBoxLayout($productBoxLayout);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTitle', []);

        return parent::getMetaTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaTitle($metaTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaTitle', [$metaTitle]);

        return parent::setMetaTitle($metaTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getStream()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStream', []);

        return parent::getStream();
    }

    /**
     * {@inheritDoc}
     */
    public function setStream(\Shopware\Models\ProductStream\ProductStream $stream = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStream', [$stream]);

        return parent::setStream($stream);
    }

    /**
     * {@inheritDoc}
     */
    public function getMediaId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMediaId', []);

        return parent::getMediaId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSortingIds()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSortingIds', []);

        return parent::getSortingIds();
    }

    /**
     * {@inheritDoc}
     */
    public function setSortingIds($sortingIds)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSortingIds', [$sortingIds]);

        return parent::setSortingIds($sortingIds);
    }

    /**
     * {@inheritDoc}
     */
    public function hideSortings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hideSortings', []);

        return parent::hideSortings();
    }

    /**
     * {@inheritDoc}
     */
    public function setHideSortings($hideSortings)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHideSortings', [$hideSortings]);

        return parent::setHideSortings($hideSortings);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacetIds()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacetIds', []);

        return parent::getFacetIds();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacetIds($facetIds)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacetIds', [$facetIds]);

        return parent::setFacetIds($facetIds);
    }

    /**
     * {@inheritDoc}
     */
    public function fromArray(array $array = array (
), array $fillable = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fromArray', [$array, $fillable]);

        return parent::fromArray($array, $fillable);
    }

    /**
     * {@inheritDoc}
     */
    public function setOneToOne($data, $model, $property, $reference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOneToOne', [$data, $model, $property, $reference]);

        return parent::setOneToOne($data, $model, $property, $reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setOneToMany($data, $model, $property, $reference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOneToMany', [$data, $model, $property, $reference]);

        return parent::setOneToMany($data, $model, $property, $reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setManyToOne($data, $model, $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManyToOne', [$data, $model, $property]);

        return parent::setManyToOne($data, $model, $property);
    }

}
